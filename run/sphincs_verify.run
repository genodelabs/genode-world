installed_command nimble

build { nimble/sphincs_verify }

create_boot_directory

import_from_depot genodelabs/src/[base_src] \
                  genodelabs/src/init \
                  genodelabs/src/report_rom \
                  genodelabs/src/libc

install_config {
<config>
	<parent-provides>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="PD"/>
		<service name="RAM"/>
		<service name="ROM"/>
	</parent-provides>

	<default-route> <any-service> <parent/> <any-child/> </any-service> </default-route>

	<start name="report_rom" caps="100">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config verbose="yes"/>
	</start>

	<start name="verify" caps="200">
		<binary name="sphincs_verify"/>
		<resource name="RAM" quantum="12M"/>
		<config verbose="yes">
			<libc stdout="/dev/log" stderr="/dev/null" rtc="/dev/null"/>
			<vfs>
				<tar name="test.tar"/>
				<dir name="dev"> <log/> <null/> </dir>
			</vfs>
			<verify path="expect_valid.txt"   pubkey="/nonexistent_pubkey"/>
			<verify path="expect_valid.txt"   pubkey="/dev/null"/>
			<verify path="expect_valid.txt"   pubkey="/pubkey"/>
			<verify path="expect_invalid.txt" pubkey="/pubkey"/>
		</config>
	</start>
</config>
}

exec tar cf [run_dir]/genode/test.tar -C [genode_dir]/repos/world/src/nimble/sphincs_verify/test_data .

build_boot_image { sphincs_verify libc.lib.so vfs.lib.so pthread.lib.so }

append qemu_args " -nographic "

run_genode_until {</result>.*\n} 30

grep_output {\[init \-\> report_rom\]}

compare_output_to {
[init -> report_rom] report 'verify -> result'
[init -> report_rom]   <result>
[init -> report_rom]     <bad reason="public key unavailable" path="expect_valid.txt" />
[init -> report_rom]     <bad reason="malformed public key" path="expect_valid.txt" />
[init -> report_rom]     <good path="expect_valid.txt" />
[init -> report_rom]     <bad reason="bad signature" path="expect_invalid.txt" />
[init -> report_rom]   </result>
}
