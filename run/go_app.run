#
# \brief  Example for running go application
# \author Alexander Tormasov
# \date   2021-12-27
#

# general config section
set num_cpu 4
set mem_size "512M"
# in bytes - 1610612736 == 1.5Gb
set arena_mem_size "1610612736"

# pipe is mandatory for netpoll which is compiled now into libgo bu default
set need_pipe 1

# TARGET= from target.mk
set executable "go_app"
# could be like test to refer make target test/go_app
set executable_place "test"

set executable_mem "120M"
set executable_caps "300"

# any modules for executable above should be listed here
set modules "ld.lib.so libc.lib.so libm.lib.so posix.lib.so stdcxx.lib.so vfs.lib.so"

append_if $need_pipe modules { vfs_pipe.lib.so }

set conf_verbose "yes"
set conf_ld_verbose "yes"

# build section
set build_components { 
	core init timer lib/ld
}

lappend build_components "$executable_place/$executable"

append_if $need_pipe build_components { lib/vfs/pipe }

build $build_components

create_boot_directory

# assemble config for executable

set config {
	<config>
		<parent-provides>
			<service name="ROM"/>
			<service name="LOG"/>
			<service name="RM"/>
			<service name="CPU"/>
			<service name="PD"/>
			<service name="IRQ"/>
			<service name="IO_MEM"/>
			<service name="IO_PORT"/>
		</parent-provides>
}

append config {
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>

	<default caps="100"/>
}

append config {
	<start name="timer">
		<resource name="RAM" quantum="3M"/>
		<provides><service name="Timer"/></provides>
	</start>
}

# main golang executable
append config {
	<start name="} $executable {" caps="} $executable_caps {">
		<resource name="RAM" quantum="} $executable_mem {" />
		<config verbose="} $conf_verbose {"  ld_verbose="} $conf_ld_verbose {">
			<arg value="} $executable {" />
			<vfs>
				<dir name="dev"> <log/> </dir>
}

# add every library/binaries (mandatory for golang stack unwind)
foreach lib $modules {
	append config "<rom name=\"$lib\" label=\"$lib\"/>"
}

append config {
				<rom name="binary" label="} $executable {"/>
				<dir name="proc">
					<dir name="self">
						<rom name="exe" label="} $executable {"/>
					</dir>
				</dir>
}

append_if $need_pipe config {
				<dir name="pipe"> <pipe/> </dir>
}

append config {
			</vfs>
				<libc stdout="/dev/log" stderr="/dev/log"
}

append_if $need_pipe config {
				pipe="/pipe"
}

append config {
				>
					<mmap local_area_default_size="} $arena_mem_size {"  />
				</libc>
			</config>
		</start>
	</config>
}

install_config $config

# build boot image section

set boot_modules { }

append boot_modules { core }
append boot_modules { init }
append boot_modules { timer }

foreach lib $modules {
	lappend boot_modules "$lib"
}

lappend boot_modules "$executable"

build_boot_image $boot_modules

append qemu_args " -m $mem_size -nographic -smp $num_cpu"

run_genode_until forever
