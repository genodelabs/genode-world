#
# This test case uses the modular Sculpt approach in order to start a Java
# scenario that features two NIC interfaces on x86_64 Qemu only. The servlet
# spawns two HTTP server instances that are redirected to the two NICs and to
# the host on port 8080 and 8081. Therefore, http://localhost:8080 will display
# a Genode log that is stored in a 'log' file on the AHCI device while
# http://localhost:8081 will display a small webpage for testing.
#

# Sculpt env variables
set ::env(SCULPT) boot2java
set ::env(LOG)    core

set lynx [installed_command lynx]

assert {[have_include power_on/qemu] && [have_board pc]}

source ${genode_dir}/repos/gems/run/sculpt.run

append qemu_args " -m 1024 "

# attach small SATA disk to Qemu to experiment with file-system access
set disk_image "bin/boot2java-ahci.raw"
exec mkdir -p bin
if {![file exists bin/boot2java-ahci.raw]} {
	puts stderr "creating toy disk image $disk_image for use in Qemu"
	catch { exec dd if=/dev/zero of=$disk_image bs=1M count=16 }
	catch { exec mke2fs -F $disk_image }
}
append qemu_args " -device ahci,id=ahci "
append qemu_args " -drive id=hdd,file=$disk_image,format=raw,if=none -device ide-hd,drive=hdd,bus=ahci.1 "

# configure nic interfaces
append_qemu_nic_args "hostfwd=tcp::8080-:8080"
append qemu_args " -nographic -net nic,model=e1000,netdev=net1 -netdev user,id=net1,hostfwd=tcp::8081-:8081 "

run_genode_until {.*Server started.*\n} 80

#
# Download and check website from server
#
set uri "http://localhost:8081"

puts "http server is up, try to query website $uri"

set website [exec $lynx -dump $uri]

if {![regexp {Meet us at FOSDEM 2012} $website dummy]} {
	puts stderr "Query returned unexpected website"
	exit 2;
}
