#
# Build
#

build { core init drivers/timer
	app/rom_logger
	proxy/remoterom/backend/nic_ip/client
	drivers/nic
}

create_boot_directory

#
# Generate config
#

install_config {
<config>
	<parent-provides>
		<service name="CAP"/>
		<service name="LOG"/>
		<service name="RM"/>
		<service name="SIGNAL"/>
		<service name="ROM" />
		<service name="RAM" />
		<service name="CPU" />
		<service name="PD" />
		<service name="IO_MEM" />
		<service name="IRQ" />
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="rom_logger">
		<resource name="RAM" quantum="4M"/>
		<config rom="remote" />
		<route>
			<service name="ROM"> <child name="remoterom_client"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>
	<start name="remoterom_client">
		<resource name="RAM" quantum="8M"/>
		<provides><service name="ROM"/></provides>
		<config>
			<remoterom name="remote" src="192.168.42.11" dst="192.168.42.10" />
		</config>
	</start>
	<start name="nic_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Nic"/></provides>
		<config>
			<nic tap="tap1"/>
		</config>
	</start>
</config>}

#
# Boot image
#

build_boot_image { core init timer
	remoterom_client
	rom_logger
	nic_drv
}

append qemu_args " -nographic "
append qemu_args " -net tap,ifname=tap2 "

run_genode_until forever
