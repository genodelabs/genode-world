#
# \brief  Test for using chrony
# \author Roland Baer
# \date   2021-12-29
#
# Note: To get a recent certificate run the following command on a linux system
#       with openssl installed:
# $ openssl s_client -showcerts ptbtime1.ptb.de:4460 </dev/null
#       From the given output select the certificate from Let's Encrypt
#       (or whatever is the root of the given certificate chain).

create_boot_directory

set packages "
	[depot_user]/pkg/[drivers_nic_pkg]
	[depot_user]/pkg/system_rtc-[board]
	[depot_user]/src/[base_src]
	[depot_user]/src/gmp
	[depot_user]/src/init
	[depot_user]/src/libc
	[depot_user]/src/nic_router
	[depot_user]/src/posix
	[depot_user]/src/stdcxx
	[depot_user]/src/vfs
	[depot_user]/src/vfs_jitterentropy
	[depot_user]/src/vfs_lxip
	[depot_user]/src/vfs_pipe
"

proc rtc_driver { } {
	switch [board] {
		linux   { return "linux_rtc" }
		pc      { return "pc_rtc" }
		default { return "dummy_rtc" }
	}
}

import_from_depot $packages

build { app/chrony driver/rtc/spec/x86 lib/nettle lib/gnutls }

#
# Generate config
#

set lx_ip_addr "10.0.2.55"

proc platform_policy {} {
	return {<policy label_prefix="nic"> <pci class="USB"/> </policy>}
}

set config {
<config verbose="yes" prio_levels="2">
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start> 
	<start name="nic" caps="1500" managing_system="yes">
		<resource name="RAM" quantum="32M"/>
		<binary name="init"/>
		<route>
			<service name="ROM" label="config"> <parent label="drivers.config"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<service name="Uplink"> <child name="nic_router"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start> }
append config {
	<start name="report_rom">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config verbose="yes">
			<policy label_suffix="set_rtc" report="chrony_daemon -> set_rtc"/>
		</config>
	</start>
	<start name="rtc" ld="} [expr [have_board linux] ? "no" : "yes"] {">
		<resource name="RAM" quantum="1M"/>
		<binary name="} [rtc_driver] {"/>
		<config verbose="yes" allow_setting_rtc="yes" />
		<provides> <service name="Rtc"/> </provides>
		<route>
			<service name="Timer"> <child name="timer"/> </service>
			<service name="ROM" label="set_rtc"> <child name="report_rom"/> </service>
			<any-service> <parent /> </any-service>
		</route>
	</start>}

append config {
	<start name="nic_router" caps="120">
		<resource name="RAM" quantum="5M"/>
		<provides>
			<service name="Nic"/>
			<service name="Uplink"/>
		</provides>
		<config verbose="yes" verbose_domain_state="yes" verbose_packets="yes"> 
			<policy label_prefix="chrony_daemon" domain="server"/> 
			<policy label_prefix="nic"           domain="uplink"/>
			<domain name="uplink" }
append_if [have_spec linux] config " interface=\"$lx_ip_addr/24\" gateway=\"10.0.2.1\""
append config { >
				<nat domain="server"
				     tcp-ports="16384"
				     udp-ports="16384"
				     icmp-ids="16384"/>
			</domain>
			<domain name="server" interface="10.0.3.1/24" verbose_packets="yes">
				<tcp dst="0.0.0.0/0"><permit-any domain="uplink" /></tcp>
				<udp dst="0.0.0.0/0"><permit-any domain="uplink" /></udp>
				<dhcp-server ip_first="10.0.3.2"
				             ip_last="10.0.3.3"
				             ip_lease_time_sec="600">
					<dns-server ip="8.8.8.8" />
				</dhcp-server>
			</domain>
		</config>
	</start> 
	<start name="system_rtc">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Rtc"/></provides>
		<config verbose="yes" allow_setting_rtc="true"/>
		<route>
			<service name="ROM" label="set_rtc"> <child name="report_rom"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<service name="Rtc"> <child name="rtc"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>
}

append config {
	<start name="chrony_daemon" caps="320" priority="-1">
		<binary name="chronyd"/>
		<resource name="RAM" quantum="64M"/>
		<config ld_verbose="yes" verbose="yes">
			<env key="GNUTLS_DEBUG_LEVEL" value="10" />
			<arg value="chronyd"/>
			<arg value="-d"/>
			<arg value="-d"/>
			<arg value="-4"/>
			<libc stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc" socket="/socket" pipe="/pipe" rng="/dev/random" />
			<vfs>
				<dir name="dev">
					<log/>
					<jitterentropy name="random"/>
					<jitterentropy name="urandom"/>
					<rtc/>
					<null/>
				</dir>
				<dir name="socket">
					<lxip dhcp="yes"/>
				</dir>
				<dir name="pipe"> <pipe/> </dir>
				<dir name="etc">
					<inline name="chrony.conf">
server ptbtime1.ptb.de nts
ntstrustedcerts /etc/cert_lets_encrypt.crt
makestep 1.0 3
rtcsync
driftfile /var/run/chrony/drift
logdir /var/log
log tracking
</inline>
					<!-- see note on top to update certificate -->
					<inline name="cert_lets_encrypt.crt">
-----BEGIN CERTIFICATE-----
MIIFBTCCAu2gAwIBAgIQS6hSk/eaL6JzBkuoBI110DANBgkqhkiG9w0BAQsFADBP
MQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJuZXQgU2VjdXJpdHkgUmVzZWFy
Y2ggR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBYMTAeFw0yNDAzMTMwMDAwMDBa
Fw0yNzAzMTIyMzU5NTlaMDMxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBF
bmNyeXB0MQwwCgYDVQQDEwNSMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQDPV+XmxFQS7bRH/sknWHZGUCiMHT6I3wWd1bUYKb3dtVq/+vbOo76vACFL
YlpaPAEvxVgD9on/jhFD68G14BQHlo9vH9fnuoE5CXVlt8KvGFs3Jijno/QHK20a
/6tYvJWuQP/py1fEtVt/eA0YYbwX51TGu0mRzW4Y0YCF7qZlNrx06rxQTOr8IfM4
FpOUurDTazgGzRYSespSdcitdrLCnF2YRVxvYXvGLe48E1KGAdlX5jgc3421H5KR
mudKHMxFqHJV8LDmowfs/acbZp4/SItxhHFYyTr6717yW0QrPHTnj7JHwQdqzZq3
DZb3EoEmUVQK7GH29/Xi8orIlQ2NAgMBAAGjgfgwgfUwDgYDVR0PAQH/BAQDAgGG
MB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATASBgNVHRMBAf8ECDAGAQH/
AgEAMB0GA1UdDgQWBBS7vMNHpeS8qcbDpHIMEI2iNeHI6DAfBgNVHSMEGDAWgBR5
tFnme7bl5AFzgAiIyBpY9umbbjAyBggrBgEFBQcBAQQmMCQwIgYIKwYBBQUHMAKG
Fmh0dHA6Ly94MS5pLmxlbmNyLm9yZy8wEwYDVR0gBAwwCjAIBgZngQwBAgEwJwYD
VR0fBCAwHjAcoBqgGIYWaHR0cDovL3gxLmMubGVuY3Iub3JnLzANBgkqhkiG9w0B
AQsFAAOCAgEAkrHnQTfreZ2B5s3iJeE6IOmQRJWjgVzPw139vaBw1bGWKCIL0vIo
zwzn1OZDjCQiHcFCktEJr59L9MhwTyAWsVrdAfYf+B9haxQnsHKNY67u4s5Lzzfd
u6PUzeetUK29v+PsPmI2cJkxp+iN3epi4hKu9ZzUPSwMqtCceb7qPVxEbpYxY1p9
1n5PJKBLBX9eb9LU6l8zSxPWV7bK3lG4XaMJgnT9x3ies7msFtpKK5bDtotij/l0
GaKeA97pb5uwD9KgWvaFXMIEt8jVTjLEvwRdvCn294GPDF08U8lAkIv7tghluaQh
1QnlE4SEN4LOECj8dsIGJXpGUk3aU3KkJz9icKy+aUgA+2cP21uh6NcDIS3XyfaZ
QjmDQ993ChII8SXWupQZVBiIpcWO4RqZk3lr7Bz5MUCwzDIA359e57SSq5CCkY0N
4B6Vulk7LktfwrdGNVI5BsC9qqxSwSKgRJeZ9wygIaehbHFHFhcBaMDKpiZlBHyz
rsnnlFXCb5s8HKn5LsUgGvB24L7sGNZP2CX7dhHov+YhD+jozLW2p9W4959Bz2Ei
RmqDtmiXLnzqTpXbI+suyCsohKRg6Un0RC47+cpiVwHiXZAW+cn8eiNIjqbVgXLx
KPpdzvvtTnOPlC7SQZSYmdunr3Bf9b77AiC/ZidstK36dRILKz7OA54=
-----END CERTIFICATE-----
</inline>
				</dir>
				<dir name="var">
					<dir name="run">
						<dir name="chrony">
							<inline name="chronyd.pid" />
							<inline name="chronyd.sock" />
							<inline name="drift" />
						</dir>
					</dir>
					<dir name="log">
						<inline name="tracking.log" />
					</dir>
				</dir>
			</vfs>
		</config>
		<route>
			<service name="Nic"> <child name="nic_router"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<service name="Rtc"> <child name="system_rtc"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>
</config>
}

install_config $config

build_boot_image [build_artifacts]

#
# Execute test case
#

# qemu config
append qemu_args "  -nographic "

append_qemu_nic_args "hostfwd=tcp::12865-:12865,hostfwd=tcp::49153-:49153"

run_genode_until "init -> rtc] set time to" 900
