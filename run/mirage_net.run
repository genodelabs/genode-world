if {![have_spec x86_64]} {
	puts "\nSolo5 requires a 64bit architecture\n"
	exit 0
}

if {![file exists bin/mirage]} {
	puts ""
	puts "A mirage image must be provided at 'bin/mirage' to execute this scenario."
	puts ""
	exit 1
}

if {[have_board linux]} {
	puts ""
	puts "This scenario is not available for the Linux platform."
	puts ""
	exit 1
}

create_boot_directory

import_from_depot \
	[depot_user]/src/[base_src] \
	[depot_user]/src/init \
	[depot_user]/src/rtc_drv \

source ${genode_dir}/repos/base/run/platform_drv.inc

set build_components {
	drivers/nic
	drivers/rtc
	lib/solo5
}

append_platform_drv_build_components

build $build_components

append config {
<config>
	<default caps="256"/>
	<parent-provides>
		<service name="CPU"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="IRQ"/>
		<service name="LOG"/>
		<service name="PD"/>
		<service name="RAM"/>
		<service name="RM"/>
		<service name="ROM"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service> </default-route>}

append_platform_drv_config

append config {
	<start name="timer" caps="96">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>
	<start name="nic_drv">
		<binary name="ipxe_nic_drv"/>
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Nic"/></provides>
	</start>
	<start name="rtc_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Rtc"/></provides>
	</start>
	<start name="mirage" caps="256">
		<resource name="RAM" quantum="32M"/>
		<config> <nic/> <rtc/> </config>
	</start>
</config>
}

install_config $config

set boot_modules {
	mirage
	rtc_drv
	ipxe_nic_drv
	solo5.lib.so
}

# platform-specific modules
append_platform_drv_boot_modules

build_boot_image $boot_modules

append qemu_args " -nographic "

run_genode_until forever
