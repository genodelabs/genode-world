diff -ru contrib/libgo-10be92754f6dbbd51b390bfdc9250f2b4370d9cb/src/lib/gcc/libgo/configure genode/libgo/configure
--- contrib/libgo-10be92754f6dbbd51b390bfdc9250f2b4370d9cb/src/lib/gcc/libgo/configure	2018-06-22 17:25:34.000000000 +0300
+++ genode/libgo/configure	2020-07-24 14:17:39.000000000 +0300
@@ -694,6 +694,8 @@
 LIBGO_IS_FREEBSD_TRUE
 LIBGO_IS_DARWIN_FALSE
 LIBGO_IS_DARWIN_TRUE
+LIBGO_IS_INNO_FALSE
+LIBGO_IS_INNO_TRUE
 go_include
 LIBATOMIC
 USE_LIBFFI_FALSE
@@ -13772,7 +13774,7 @@
 done
 
 
-WARN_FLAGS='-Wall -Wextra -Wwrite-strings -Wcast-qual'
+WARN_FLAGS='-Wall -Wextra -Wwrite-strings'
 
 
 # Check whether --enable-werror was given.
@@ -13970,7 +13970,7 @@
 # All known GOOS values.  This is the union of all operating systems
 # supported by the gofrontend and all operating systems supported by
 # the gc toolchain.
-ALLGOOS="aix android darwin dragonfly freebsd hurd illumos ios irix js linux netbsd openbsd plan9 rtems solaris windows zos"
+ALLGOOS="aix android darwin dragonfly freebsd hurd illumos ios irix js linux netbsd openbsd plan9 rtems solaris windows zos genode"
 
 is_darwin=no
 is_freebsd=no
@@ -13929,9 +13931,12 @@
 is_solaris=no
 is_aix=no
 is_hurd=no
+is_inno=no
 GOOS=unknown
 case ${host} in
   *-*-darwin*)   is_darwin=yes;  GOOS=darwin ;;
+  x86_64-pc-elf)  is_inno=yes; GOOS=genode ;;
+  aarch64-none-elf)  is_inno=yes; GOOS=genode ;;
   *-*-freebsd*)  is_freebsd=yes; GOOS=freebsd ;;
   *-*-irix6*)    is_irix=yes;    GOOS=irix ;;
   *-*-linux*)    is_linux=yes;   GOOS=linux ;;
@@ -13943,6 +13947,14 @@
   *-*-aix*)      is_aix=yes;     GOOS=aix ;;
   *-*-gnu*)      is_hurd=yes;    GOOS=hurd ;;
 esac
+ if test $is_inno = yes; then
+  LIBGO_IS_INNO_TRUE=
+  LIBGO_IS_INNO_FALSE='#'
+else
+  LIBGO_IS_INNO_TRUE='#'
+  LIBGO_IS_INNO_FALSE=
+fi
+
  if test $is_darwin = yes; then
   LIBGO_IS_DARWIN_TRUE=
   LIBGO_IS_DARWIN_FALSE='#'
@@ -16035,6 +16047,10 @@
   as_fn_error $? "conditional \"LIBGO_IS_DARWIN\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
+if test -z "${LIBGO_IS_INNO_TRUE}" && test -z "${LIBGO_IS_INNO_FALSE}"; then
+  as_fn_error "conditional \"LIBGO_IS_INNO\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
 if test -z "${LIBGO_IS_FREEBSD_TRUE}" && test -z "${LIBGO_IS_FREEBSD_FALSE}"; then
   as_fn_error $? "conditional \"LIBGO_IS_FREEBSD\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
diff -ru contrib/libgo-10be92754f6dbbd51b390bfdc9250f2b4370d9cb/src/lib/gcc/libgo/mkrsysinfo.sh genode/libgo/mkrsysinfo.sh
--- contrib/libgo-10be92754f6dbbd51b390bfdc9250f2b4370d9cb/src/lib/gcc/libgo/mkrsysinfo.sh	2017-11-14 17:26:04.000000000 +0300
+++ genode/libgo/mkrsysinfo.sh	2020-06-23 01:18:02.000000000 +0300
@@ -16,7 +16,15 @@
 # represented in Go and ones which we need to rewrite.  We also skip
 # function declarations, as we don't need them here.  All the symbols
 # will all have a leading underscore.
+
+# The fix for GO language generation of stubs (problem with forward declaration/etc
+# remove bad lines generated by gccgo as bug in -fdump-... generation and add it to the end of file below
 grep -v '^// ' gen-sysinfo.go | \
+  grep -v '^type _cmsghdr _cmsghdr' | \
+  grep -v '^type _mqd_t \*___mq' | \
+  grep -v '^type ___pthread_t \*_pthread' | \
+  grep -v '^type _timer_t \*___timer' | \
+  grep -v '^type ___gnuc_va_list \[0+1\]___va_list_tag' | \
   grep -v '^func' | \
   grep -v '^var ' | \
   grep -v '^type _timeval ' | \
@@ -215,3 +223,20 @@
 if ! grep '^type uint128' ${OUT} > /dev/null 2>&1; then
     echo "type uint128 [16]byte" >> ${OUT}
 fi
+
+# The fix for GO language generation of stubs (problem with forward declaration/etc
+grep '^type _cmsghdr _cmsghdr' gen-sysinfo.go | \
+    sed -e 's/type _cmsghdr _cmsghdr/type _cmsghdr struct { cmsg_len uint32; cmsg_level int32; cmsg_type int32; }/' \
+    >> ${OUT}
+grep '^type _mqd_t \*___mq' gen-sysinfo.go | \
+    sed -e 's/type _mqd_t \*___mq/type _mqd_t *struct { }/' \
+    >> ${OUT}
+grep '^type _timer_t \*___timer' gen-sysinfo.go | \
+    sed -e 's/type _timer_t \*___timer/type _timer_t *struct { }/' \
+    >> ${OUT}
+grep '^type ___pthread_t \*_pthread' gen-sysinfo.go | \
+    sed -e 's/type ___pthread_t \*_pthread/type ___pthread_t *struct { }/' \
+    >> ${OUT}
+grep '^type ___gnuc_va_list \[0+1\]___va_list_tag' gen-sysinfo.go | \
+    sed -e 's/type ___gnuc_va_list \[0+1\]___va_list_tag/type ___gnuc_va_list [0+1]struct { gp_offset uint32; fp_offset uint32; overflow_arg_area *byte; reg_save_area *byte; }/' \
+    >> ${OUT}
diff -ru contrib/libgo-10be92754f6dbbd51b390bfdc9250f2b4370d9cb/src/lib/gcc/libgo/mksysinfo.sh genode/libgo/mksysinfo.sh
--- contrib/libgo-10be92754f6dbbd51b390bfdc9250f2b4370d9cb/src/lib/gcc/libgo/mksysinfo.sh	2018-11-09 18:29:52.000000000 +0300
+++ genode/libgo/mksysinfo.sh	2020-06-23 01:18:02.000000000 +0300
@@ -28,6 +28,11 @@
 # function declarations, as we don't need them here.  All the symbols
 # will all have a leading underscore.
 grep -v '^// ' gen-sysinfo.go | \
+  grep -v '^type _cmsghdr _cmsghdr' | \
+  grep -v '^type _mqd_t \*___mq' | \
+  grep -v '^type ___pthread_t \*_pthread' | \
+  grep -v '^type _timer_t \*___timer' | \
+  grep -v '^type ___gnuc_va_list \[0+1\]___va_list_tag' | \
   grep -v '^func' | \
   grep -v '^type _timeval ' | \
   grep -v '^type _timespec_t ' | \
@@ -576,8 +581,13 @@
 grep '^const _MSG_' gen-sysinfo.go | \
   sed -e 's/^\(const \)_\(MSG_[^= ]*\)\(.*\)$/\1\2 = _\2/' >> ${OUT}
 
+# The fix for GO language generation of stubs (problem with forward declaration/etc
+grep '^type _cmsghdr _cmsghdr' gen-sysinfo.go | \
+    sed -e 's/type _cmsghdr _cmsghdr/type _cmsghdr struct { cmsg_len uint32; cmsg_level int32; cmsg_type int32; }/' \
+    >> ${OUT}
 # The cmsghdr struct.
-cmsghdr=`grep '^type _cmsghdr ' gen-sysinfo.go`
+#cmsghdr=`grep '^type _cmsghdr ' gen-sysinfo.go`
+cmsghdr=`grep '^type _cmsghdr ' ${OUT}`
 if test -n "$cmsghdr"; then
   cmsghdr_len=`echo $cmsghdr | sed -n -e 's/^.*cmsg_len \([^ ]*\);.*$/\1/p'`
   echo "type Cmsghdr_len_t $cmsghdr_len" >> ${OUT}
@@ -1332,4 +1342,18 @@
     sed -e 's/_in6_addr_t/[16]byte/g' \
     >> ${OUT}
 
+# The fix for GO language generation of stubs (problem with forward declaration/etc
+grep '^type _mqd_t \*___mq' gen-sysinfo.go | \
+    sed -e 's/type _mqd_t \*___mq/type _mqd_t *struct { }/' \
+    >> ${OUT}
+grep '^type _timer_t \*___timer' gen-sysinfo.go | \
+    sed -e 's/type _timer_t \*___timer/type _timer_t *struct { }/' \
+    >> ${OUT}
+grep '^type ___pthread_t \*_pthread' gen-sysinfo.go | \
+    sed -e 's/type ___pthread_t \*_pthread/type ___pthread_t *struct { }/' \
+    >> ${OUT}
+grep '^type ___gnuc_va_list \[0+1\]___va_list_tag' gen-sysinfo.go | \
+    sed -e 's/type ___gnuc_va_list \[0+1\]___va_list_tag/type ___gnuc_va_list [0+1]struct { gp_offset uint32; fp_offset uint32; overflow_arg_area *byte; reg_save_area *byte; }/' \
+    >> ${OUT}
+
 exit $?
diff -ru contrib/libgo-10be92754f6dbbd51b390bfdc9250f2b4370d9cb/src/lib/gcc/libgo/Makefile.in genode/libgo/Makefile.in
--- contrib/libgo-10be92754f6dbbd51b390bfdc9250f2b4370d9cb/src/lib/gcc/libgo/Makefile.in	2018-06-01 01:46:52.000000000 +0300
+++ genode/libgo/Makefile.in	2020-07-24 15:34:59.000000000 +0300
@@ -892,12 +892,13 @@
 # Some packages are only needed for tests, so unlike the other
 # internal packages nothing will explicitly depend on them.
 # Force them to be built.
-noinst_DATA = golang.org/x/net/nettest.gox internal/cfg.gox \
-	internal/obscuretestdata.gox internal/profile.gox \
-	internal/testenv.gox internal/trace.gox \
-	net/internal/socktest.gox os/exec/internal/fdtest.gox \
-	os/signal/internal/pty.gox reflect/internal/example1.gox \
-	reflect/internal/example2.gox zdefaultcc.go
+noinst_DATA = golang.org/x/net/nettest.gox internal/cfg.gox \
+	internal/obscuretestdata.gox internal/profile.gox \
+	internal/testenv.gox internal/trace.gox \
+	net/internal/socktest.gox os/exec/internal/fdtest.gox \
+	os/signal/internal/pty.gox reflect/internal/example1.gox \
+	reflect/internal/example2.gox zdefaultcc.go
+noinst_DATA =
 @LIBGO_IS_RTEMS_FALSE@rtems_task_variable_add_file = 
 @LIBGO_IS_RTEMS_TRUE@rtems_task_variable_add_file = runtime/rtems-task-variable-add.c
 runtime_context_asm_file = $(am__append_3)
diff -ru contrib/libgo-10be92754f6dbbd51b390bfdc9250f2b4370d9cb/src/lib/gcc/libgo/Makefile.am genode/libgo/Makefile.am
--- contrib/libgo-10be92754f6dbbd51b390bfdc9250f2b4370d9cb/src/lib/gcc/libgo/Makefile.am	2018-06-01 01:46:52.000000000 +0300
+++ genode/libgo/Makefile.am	2020-07-24 14:10:22.000000000 +0300
@@ -423,18 +423,19 @@
 # Some packages are only needed for tests, so unlike the other
 # internal packages nothing will explicitly depend on them.
 # Force them to be built.
-noinst_DATA = \
-	golang.org/x/net/nettest.gox \
-	internal/cfg.gox \
-	internal/obscuretestdata.gox \
-	internal/profile.gox \
-	internal/testenv.gox \
-	internal/trace.gox \
-	net/internal/socktest.gox \
-	os/exec/internal/fdtest.gox \
-	os/signal/internal/pty.gox \
-	reflect/internal/example1.gox \
-	reflect/internal/example2.gox
+#noinst_DATA = \
+#	golang.org/x/net/nettest.gox \
+#	internal/cfg.gox \
+#	internal/obscuretestdata.gox \
+#	internal/profile.gox \
+#	internal/testenv.gox \
+#	internal/trace.gox \
+#	net/internal/socktest.gox \
+#	os/exec/internal/fdtest.gox \
+#	os/signal/internal/pty.gox \
+#	reflect/internal/example1.gox \
+#	reflect/internal/example2.gox
+noinst_DATA =
 
 if LIBGO_IS_RTEMS
 rtems_task_variable_add_file = runtime/rtems-task-variable-add.c
@@ -619,11 +620,15 @@
 	$(SHELL) $(srcdir)/mvifdiff.sh zstdpkglist.go.tmp zstdpkglist.go
 	$(STAMP) $@
 
+if LIBGO_IS_INNO
+runtime_getncpu_file = runtime/getncpu-bsd.c
+else
 if LIBGO_IS_LINUX
 syscall_epoll_file = epoll.go
 else
 syscall_epoll_file =
 endif
+endif
 
 libcalls.go: s-libcalls; @true
 s-libcalls: libcalls-list go/syscall/mksyscall.awk $(srcdir)/go/syscall/*.go
diff -NaurwB gcc.libgobase/libgo/libgo-packages.txt gcc.libgomod/libgo/libgo-packages.txt
--- gcc.libgobase/libgo/libgo-packages.txt	2021-06-08 12:14:12.770356805 +0300
+++ gcc.libgomod/libgo/libgo-packages.txt	2021-06-08 20:18:15.040462004 +0300
@@ -85,7 +85,6 @@
 golang.org/x/net/http/httpproxy
 golang.org/x/net/http2/hpack
 golang.org/x/net/idna
-golang.org/x/net/nettest
 golang.org/x/sys/cpu
 golang.org/x/text/secure/bidirule
 golang.org/x/text/transform
@@ -145,7 +144,6 @@
 internal/syscall/execenv
 internal/syscall/unix
 internal/sysinfo
-internal/testenv
 internal/testlog
 internal/trace
 internal/unsafeheader
@@ -151,7 +149,6 @@
 net/http/httputil
 net/http/internal
 net/http/pprof
-net/internal/socktest
 net/mail
 net/rpc
 net/rpc/jsonrpc
