genode_no_qprocess.patch

diff --git a/src/lib/app/mainapplication.cpp b/src/lib/app/mainapplication.cpp
index 959d60a68..670187de3 100644
--- a/src/lib/app/mainapplication.cpp
+++ b/src/lib/app/mainapplication.cpp
@@ -268,7 +268,7 @@ MainApplication::MainApplication(int &argc, char** argv)
     if (messages.isEmpty()) {
         messages.append(QStringLiteral(" "));
     }
-
+#if 0
     if (isRunning()) {
         m_isClosing = true;
         for (const QString &message : qAsConst(messages)) {
@@ -276,6 +276,7 @@ MainApplication::MainApplication(int &argc, char** argv)
         }
         return;
     }
+#endif
 
 #ifdef Q_OS_MACOS
     setQuitOnLastWindowClosed(false);
@@ -721,9 +722,9 @@ void MainApplication::startPrivateBrowsing(const QUrl &startUrl)
         args << url.toEncoded();
     }
 
-    if (!QProcess::startDetached(applicationFilePath(), args)) {
+    //if (!QProcess::startDetached(applicationFilePath(), args)) {
         qWarning() << "MainApplication: Cannot start new browser process for private browsing!" << applicationFilePath() << args;
-    }
+    //}
 }
 
 void MainApplication::reloadUserStyleSheet()
diff --git a/src/lib/tools/qztools.cpp b/src/lib/tools/qztools.cpp
index 1f7a19230..0f3e0a2e7 100644
--- a/src/lib/tools/qztools.cpp
+++ b/src/lib/tools/qztools.cpp
@@ -853,6 +853,7 @@ QStringList QzTools::splitCommandArguments(const QString &command)
 
 bool QzTools::startExternalProcess(const QString &executable, const QString &args)
 {
+#if 0
     const QStringList arguments = splitCommandArguments(args);
 
     bool success = QProcess::startDetached(executable, arguments);
@@ -867,6 +868,9 @@ bool QzTools::startExternalProcess(const QString &executable, const QString &arg
     }
 
     return success;
+#else
+	return false;
+#endif
 }
 
 #ifdef QZ_WS_X11
